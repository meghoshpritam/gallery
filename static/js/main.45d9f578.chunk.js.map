{"version":3,"sources":["assets/images/1.jpg","assets/images/2.jpg","assets/images/3.jpg","assets/images/4.jpg","serviceWorker.ts","store/reducers/demoReducer.ts","store/reducers/rootReducer.ts","store/index.ts","index.tsx","components/Card.tsx","pages/Gallery.tsx","App.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","issuesDisplaySlice","createSlice","name","initialState","org","repo","page","displayType","issueId","reducers","displayRepo","state","action","payload","setCurrentPage","setCurrentDisplayType","actions","rootReducer","combineReducers","demo","demoReducer","store","configureStore","reducer","App","require","default","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","useStyles","makeStyles","theme","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","img","title","id","description","clickHandler","classes","Card","className","onClick","CardMedia","image","CardContent","Typography","gutterBottom","variant","component","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingBottom","cards","img1","img2","img3","img4","images","src","alt","downloadUrl","useState","view","undefined","setState","CssBaseline","Container","maxWidth","align","color","paragraph","Grid","container","justify","item","Button","href","map","key","xs","sm","md","lg","xl","visible","onClose","activeIndex","footer","useLocation","useEffect","log","pathname","AppBar","position","Toolbar","noWrap","Gallery","Link","Date","getFullYear"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,+B,mBCA3CD,EAAOC,QAAU,IAA0B,+B,mBCA3CD,EAAOC,QAAU,IAA0B,+B,mBCA3CD,EAAOC,QAAU,IAA0B,+B,gKCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oCCYAC,EAAqBC,YAAY,CACrCC,KAAM,gBACNC,aAVsC,CACtCC,IAAK,QACLC,KAAM,QACNC,KAAM,EACNC,YAAa,SACbC,QAAS,MAMTC,SAAU,CACRC,YADQ,SACIC,EAAOC,GAAqC,IAAD,EAC/BA,EAAOC,QAArBT,EAD6C,EAC7CA,IAAKC,EADwC,EACxCA,KACbM,EAAMP,IAAMA,EACZO,EAAMN,KAAOA,GAEfS,eANQ,SAMOH,EAAOC,GACpBD,EAAML,KAAOM,EAAOC,SAEtBE,sBATQ,SAScJ,EAAOC,GAA+C,IAAD,EACjCA,EAAOC,QAAvCN,EADiE,EACjEA,YADiE,IACpDC,eADoD,MAC1C,KAD0C,EAEzEG,EAAMJ,YAAcA,EACpBI,EAAMH,QAAUA,M,EASlBR,EAAmBgB,QAERhB,G,EALbU,Y,EACAK,sB,EACAD,eAGad,EAAf,SCjDeiB,EAJKC,YAAgB,CAAEC,KAAMC,ICc7BC,MAbDC,YAAe,CAC3BC,QAASN,KCGI,WACb,IAAMO,EAAMC,EAAQ,IAASC,QAE7BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUR,MAAOA,GACf,kBAAC,IAAD,KACE,kBAACG,EAAD,SAINM,SAASC,eAAe,SAI5BH,GJoHM,kBAAmBI,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,iOK1ItBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjBC,UAAW,CACTC,WAAY,QAEdC,YAAa,CACXC,SAAU,OAeC,cAA+D,IAA5DC,EAA2D,EAA3DA,IAAKC,EAAsD,EAAtDA,MAAoBC,GAAkC,EAA/CC,YAA+C,EAAlCD,IAAIE,EAA8B,EAA9BA,aACvCC,EAAUhB,IAChB,OACE,kBAACiB,EAAA,EAAD,CAAMC,UAAWF,EAAQb,KAAMgB,QAAS,kBAAMJ,EAAaF,KACzD,kBAACO,EAAA,EAAD,CAAWF,UAAWF,EAAQT,UAAWc,MAAOV,EAAKC,MAAOA,IAC5D,kBAACU,EAAA,EAAD,CAAaJ,UAAWF,EAAQP,aAC9B,kBAACc,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,QAAQC,UAAU,MAChDd,M,oECxBLZ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyB,KAAM,CACJC,YAAa1B,EAAM2B,QAAQ,IAE7BC,YAAa,CACXC,gBAAiB7B,EAAM8B,QAAQC,WAAWC,MAC1CC,QAASjC,EAAM2B,QAAQ,EAAG,EAAG,IAE/BO,YAAa,CACXC,UAAWnC,EAAM2B,QAAQ,IAE3BS,SAAU,CACR9B,WAAYN,EAAM2B,QAAQ,GAC1BU,cAAerC,EAAM2B,QAAQ,IAE/B1B,KAAM,CACJC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjBC,UAAW,CACTC,WAAY,UAEdC,YAAa,CACXC,SAAU,OAIR8B,EAAQ,CACZ,CACE3B,GAAI,EACJF,IAAK8B,IACL7B,MAAO,8CACPE,YACE,6GAEJ,CACED,GAAI,EACJF,IAAK+B,IACL9B,MAAO,+DACPE,YACE,6GAEJ,CACED,GAAI,EACJF,IAAKgC,IACL/B,MAAO,6DACPE,YACE,6GAEJ,CACED,GAAI,EACJF,IAAKiC,IACLhC,MAAO,qCACPE,YACE,8GAIA+B,EAAS,CACb,CAAEC,IAAKL,IAAMM,IAAK,8CAA+CC,YAAa,IAC9E,CACEF,IAAKJ,IACLK,IAAK,+DACLC,YAAa,IAEf,CAAEF,IAAKH,IAAMI,IAAK,6DAA8DC,YAAa,IAC7F,CAAEF,IAAKF,IAAMG,IAAK,qCAAsCC,YAAa,KAGxD,aACb,IAAMhC,EAAUhB,IADG,EAGOiD,mBAAoD,CAC5EC,MAAM,EACNrC,QAAIsC,IALa,mBAGZlF,EAHY,KAGLmF,EAHK,KAQbrC,EAAe,SAACF,GACpBuC,EAAS,CAAEF,MAAM,EAAMrC,QAGzB,OACE,oCACE,kBAACwC,EAAA,EAAD,MACA,8BAEE,yBAAKnC,UAAWF,EAAQc,aACtB,kBAACwB,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAChC,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAK+B,MAAM,SAASC,MAAM,cAAcjC,cAAY,GAAvF,YAGA,kBAACD,EAAA,EAAD,CAAYE,QAAQ,KAAK+B,MAAM,SAASC,MAAM,gBAAgBC,WAAS,GAAvE,wMAKA,yBAAKxC,UAAWF,EAAQoB,aACtB,kBAACuB,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,EAAGgC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CAAQtC,QAAQ,YAAYgC,MAAM,UAAUO,KAAK,YAAjD,mBAIF,kBAACL,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CAAQtC,QAAQ,WAAWgC,MAAM,UAAUO,KAAK,KAAhD,mBAQV,kBAACV,EAAA,EAAD,CAAWpC,UAAWF,EAAQsB,SAAUiB,SAAS,MAE/C,yBAAK1C,GAAG,UACN,kBAAC8C,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,GACtBW,EAAMyB,KAAI,SAAC9D,GAAD,OACT,kBAACwD,EAAA,EAAD,CAAMG,MAAI,EAACI,IAAK/D,EAAKU,GAAIsD,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxD,kBAAC,EAAD,CACE1D,GAAIV,EAAKU,GACTF,IAAKR,EAAKQ,IACVC,MAAOT,EAAKS,MACZE,YAAaX,EAAKW,YAClBC,aAAcA,SAKrB9C,EAAMiF,MACL,6BACE,kBAAC,IAAD,CACEsB,QAASvG,EAAMiF,KACfL,OAAQA,EACR4B,QAAS,WACPrB,EAAS,2BAAKnF,GAAN,IAAaiF,MAAM,MAE7BwB,YAAazG,EAAM4C,WC7I/Bb,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyB,KAAM,CACJC,YAAa1B,EAAM2B,QAAQ,IAE7B8C,OAAQ,CACN5C,gBAAiB7B,EAAM8B,QAAQC,WAAWC,MAC1CC,QAASjC,EAAM2B,QAAQ,QAIZ,qBACb,IAAM1E,EAAWyH,cACX5D,EAAUhB,IAMhB,OAJA6E,qBAAU,WAER/E,QAAQgF,IAAI3H,EAAS4H,YACpB,CAAC5H,IAEF,yBAAK+D,UAAU,OACb,kBAAC8D,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAYhE,UAAWF,EAAQW,OAC/B,kBAACJ,EAAA,EAAD,CAAYE,QAAQ,KAAKgC,MAAM,UAAU0B,QAAM,GAA/C,iBAKJ,kBAACC,EAAD,MAEA,4BAAQlE,UAAWF,EAAQ2D,QAIzB,kBAACpD,EAAA,EAAD,CAAYE,QAAQ,YAAY+B,MAAM,SAASC,MAAM,gBAAgB/B,UAAU,KAC5E,kBACD,kBAAC2D,EAAA,EAAD,CAAM5B,MAAM,UAAUO,KAAK,KAA3B,uBAEQ,KACP,IAAIsB,MAAOC,cALd,KAOA,kBAAChE,EAAA,EAAD,CAAYE,QAAQ,QAAQgC,MAAM,gBAAgBD,MAAM,UACrD,IADH,0BAE0B,IACxB,kBAAC6B,EAAA,EAAD,CAAM5B,MAAM,UAAUO,KAAK,wCAA3B,uB","file":"static/js/main.45d9f578.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.32affcb5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.45b7937d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.65c0461c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.123c487d.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface CurrentDisplay {\n  displayType: 'issues' | 'comments';\n  issueId: number | null;\n}\n\ninterface CurrentDisplayPayload {\n  displayType: 'issues' | 'comments';\n  issueId?: number;\n}\n\ninterface CurrentRepo {\n  org: string;\n  repo: string;\n}\n\ntype CurrentDisplayState = {\n  page: number;\n} & CurrentDisplay &\n  CurrentRepo;\n\nlet initialState: CurrentDisplayState = {\n  org: 'rails',\n  repo: 'rails',\n  page: 1,\n  displayType: 'issues',\n  issueId: null,\n};\n\nconst issuesDisplaySlice = createSlice({\n  name: 'issuesDisplay',\n  initialState,\n  reducers: {\n    displayRepo(state, action: PayloadAction<CurrentRepo>) {\n      const { org, repo } = action.payload;\n      state.org = org;\n      state.repo = repo;\n    },\n    setCurrentPage(state, action: PayloadAction<number>) {\n      state.page = action.payload;\n    },\n    setCurrentDisplayType(state, action: PayloadAction<CurrentDisplayPayload>) {\n      const { displayType, issueId = null } = action.payload;\n      state.displayType = displayType;\n      state.issueId = issueId;\n    },\n  },\n});\n\nexport const {\n  displayRepo,\n  setCurrentDisplayType,\n  setCurrentPage,\n} = issuesDisplaySlice.actions;\n\nexport default issuesDisplaySlice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport demoReducer from './demoReducer';\n\nconst rootReducer = combineReducers({ demo: demoReducer });\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport rootReducer from './reducers/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./reducers/rootReducer', () => {\n    const newRootReducer = require('./reducers/rootReducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\n\nconst render = () => {\n  const App = require('./App').default;\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <Router>\n          <App />\n        </Router>\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n};\n\nrender();\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./App', render);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '100%',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nexport interface CardI {\n  id: number;\n  img: string;\n  title: string;\n  description?: string;\n}\n\ninterface CardInput extends CardI {\n  clickHandler: (id: number) => void;\n}\n\nexport default ({ img, title, description, id, clickHandler }: CardInput) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.card} onClick={() => clickHandler(id)}>\n      <CardMedia className={classes.cardMedia} image={img} title={title} />\n      <CardContent className={classes.cardContent}>\n        <Typography gutterBottom variant=\"body1\" component=\"h3\">\n          {title}\n        </Typography>\n        {/* <Typography>{description}</Typography> */}\n      </CardContent>\n    </Card>\n  );\n};\n","import React, { useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Viewer from 'react-viewer';\nimport Card, { CardI } from '../components/Card';\n\nimport img1 from '../assets/images/1.jpg';\nimport img4 from '../assets/images/2.jpg';\nimport img3 from '../assets/images/3.jpg';\nimport img2 from '../assets/images/4.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst cards = [\n  {\n    id: 0,\n    img: img1,\n    title: '3D effect editing . Done for social media .',\n    description:\n      'The breakpoints are used internally in various components to make them responsive, but you can also take ',\n  },\n  {\n    id: 1,\n    img: img2,\n    title: 'Change the background into something that looks professional',\n    description:\n      'The breakpoints are used internally in various components to make them responsive, but you can also take ',\n  },\n  {\n    id: 2,\n    img: img3,\n    title: 'Highlight the important things.(Things I learned at start)',\n    description:\n      'The breakpoints are used internally in various components to make them responsive, but you can also take ',\n  },\n  {\n    id: 3,\n    img: img4,\n    title: 'Though unnatural but looks magical',\n    description:\n      'The breakpoints are used internally in various components to make them responsive, but you can also take ',\n  },\n];\n\nconst images = [\n  { src: img1, alt: '3D effect editing . Done for social media .', downloadUrl: '' },\n  {\n    src: img2,\n    alt: 'Change the background into something that looks professional',\n    downloadUrl: '',\n  },\n  { src: img3, alt: 'Highlight the important things.(Things I learned at start)', downloadUrl: '' },\n  { src: img4, alt: 'Though unnatural but looks magical', downloadUrl: '' },\n];\n\nexport default () => {\n  const classes = useStyles();\n\n  const [state, setState] = useState<{ view: boolean; id: number | undefined }>({\n    view: false,\n    id: undefined,\n  });\n\n  const clickHandler = (id: number) => {\n    setState({ view: true, id });\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              My works\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Phots are awesome, they tell us thousands of lines within a fraction of second. Images\n              with an editors touch make it more beautiful, that why I give a try to improve the\n              inner beauty of the photos\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\" href=\"/#photos\">\n                    Check them out\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\" href=\"/\">\n                    Contact me\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"xl\">\n          {/* End hero unit */}\n          <div id=\"photos\">\n            <Grid container spacing={4}>\n              {cards.map((card: CardI) => (\n                <Grid item key={card.id} xs={12} sm={6} md={4} lg={3} xl={2}>\n                  <Card\n                    id={card.id}\n                    img={card.img}\n                    title={card.title}\n                    description={card.description}\n                    clickHandler={clickHandler}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n            {state.view && (\n              <div>\n                <Viewer\n                  visible={state.view}\n                  images={images}\n                  onClose={() => {\n                    setState({ ...state, view: false });\n                  }}\n                  activeIndex={state.id}\n                />\n              </div>\n            )}\n          </div>\n        </Container>\n      </main>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.scss';\nimport AppBar from '@material-ui/core/AppBar';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Gallery from './pages/Gallery';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default () => {\n  const location = useLocation();\n  const classes = useStyles();\n\n  useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.log(location.pathname);\n  }, [location]);\n  return (\n    <div className=\"App\">\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <CameraIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Tuhin Edits\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Gallery />\n      {/* Footer */}\n      <footer className={classes.footer}>\n        {/* <Typography variant=\"h6\" align=\"center\" gutterBottom>\n\n        </Typography> */}\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          {'Copyright © '}\n          <Link color=\"inherit\" href=\"/\">\n            All Rights Reserved\n          </Link>{' '}\n          {new Date().getFullYear()}.\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {' '}\n          Design and Developed by{' '}\n          <Link color=\"inherit\" href=\"http://www.meghoshpritam.netlify.app\">\n            meghoshpritam\n          </Link>\n        </Typography>\n      </footer>\n      {/* End footer */}\n    </div>\n  );\n};\n"],"sourceRoot":""}